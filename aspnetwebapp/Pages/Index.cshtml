@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}
@using System.Text;

@functions {

    String Update(int[,] grid, int gridXSize, int gridYSize)
    {
        //counting living neighbour cells
        int[,] nextGrid = new int[gridYSize, gridXSize];
        StringBuilder info = new StringBuilder();
        for (int y = 1; y < gridYSize - 1; y++)
        {
            for (int x = 1; x < gridXSize - 1; x++)
            {
                int neighbourCount = 0;
                neighbourCount = grid[y - 1, x - 1] + grid[y - 1, x] + grid[y - 1, x + 1] +
                                 grid[y, x - 1] + grid[y, x + 1] +
                                 grid[y + 1, x - 1] + grid[y + 1, x] + grid[y + 1, x + 1];
                info.AppendLine(@y.ToString());
                info.AppendLine(", ".ToString());
                info.AppendLine(@x.ToString());
                info.AppendLine(" has ".ToString());
                info.AppendLine(@neighbourCount.ToString());
                info.AppendLine(". ".ToString());
                //<span>@y, @x has @neighbourCount living neighours</span>
                //<br />
            }
        }
        String info1 = info.ToString();
        return info1;
    }

}


<div class="text-center">
    <div class="text-center">
        <h1 class="display-4">Welcome @Model.Name</h1>
    </div>
    <!--
    <form method="post" asp-page="Index">
        <div class="form-group">
            <label asp-for="Name"></label>
            <input asp-for="Name" class="form-control" placeholder="Enter Name" autocomplete="off" />
        </div>
        <button type="submit" class="btn btn-primary">Submit</button>
    </form>
     -->
</div>
<div class="text">
    <tt>

        @{
            Random rand = new Random();
            var dict = new Dictionary<int, string>();
            dict.Add(0, ".");
            dict.Add(1, "#");
        }

        @{
            //setting up the grid
            int gridXSize = 4;
            int gridYSize = 4;
            int[,] grid = new int[gridYSize, gridXSize];

            for (int y = 0; y < gridYSize; y++)
            {
                for (int x = 0; x < gridXSize; x++)
                {
                    grid[y, x] = rand.Next(0, 2);
                }
            }

            //display the grid
            for (int y = 0; y < gridYSize; y++)
            {
                for (int x = 0; x < gridXSize; x++)
                {
                    <span>@dict[grid[y, x]]</span>
                }
                <br />
            }

            //Update(grid, gridXSize, gridYSize);
            //<button onclick="@Update(grid, gridXSize, gridYSize)">Start Timer</button>

            <button onclick="myFunction()">Click me</button>

            <p id="demo"></p>

            <script>
                function myFunction() {
                    var jsgrid = '@grid';
                    var jsgridXSize = '@gridXSize';
                    var jsgridYSize = '@gridYSize';
                    var customerName = '@Update(@grid, @gridXSize, @gridYSize);'
                    var info = @Update(@grid, @gridXSize, @gridYSize);
                    document.getElementById("demo").innerHTML = customerName;
                }
            </script>



        }


</div>
